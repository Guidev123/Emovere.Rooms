// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rooms.Infrastructure.Data.Contexts;

#nullable disable

namespace Rooms.Infrastructure.Data.Migrations
{
    [DbContext(typeof(RoomsWriteDbContext))]
    partial class RoomsWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rooms.Domain.Entities.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Participants", (string)null);
                });

            modelBuilder.Entity("Rooms.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ParticipantsQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Plan")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("MONEY");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("Rooms.Domain.Entities.Participant", b =>
                {
                    b.HasOne("Rooms.Domain.Entities.Room", "Room")
                        .WithMany("Participants")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Rooms.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ParticipantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("Email");

                            b1.HasKey("ParticipantId");

                            b1.ToTable("Participants");

                            b1.WithOwner()
                                .HasForeignKey("ParticipantId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Rooms.Domain.Entities.Room", b =>
                {
                    b.OwnsOne("Rooms.Domain.ValueObjects.RoomSpecification", "RoomSpecification", b1 =>
                        {
                            b1.Property<Guid>("RoomId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("VARCHAR(256)")
                                .HasColumnName("Description");

                            b1.Property<int>("MaxParticipantsNumber")
                                .HasColumnType("int")
                                .HasColumnName("MaxParticipantsNumber");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("Name");

                            b1.HasKey("RoomId");

                            b1.ToTable("Rooms");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.Navigation("RoomSpecification")
                        .IsRequired();
                });

            modelBuilder.Entity("Rooms.Domain.Entities.Room", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
